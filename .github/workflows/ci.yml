name: CI

on:
    push:
        branches:
            - develop
    pull_request:
        branches:
            - develop
            - main

jobs:
    install-deps:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Cache node modules
              id: cache
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: cache-node-modules-${{ hashFiles('package-lock.json') }}
            - uses: actions/setup-node@v3
              if: steps.cache.outputs.cache-hit != 'true'
              with:
                  node-version-file: '.nvmrc'
            - name: NPM install
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci --include optional

    lint:
        runs-on: ubuntu-latest
        needs: install-deps
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - run: git fetch --no-tags --prune --depth=1 origin develop
            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: cache-node-modules-${{ hashFiles('package-lock.json') }}

            - run: npx nx affected --target=lint --parallel=3 --base=origin/develop

    test:
        runs-on: ubuntu-latest
        needs: install-deps
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - run: git fetch --no-tags --prune --depth=1 origin develop
            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: cache-node-modules-${{ hashFiles('package-lock.json') }}

            - run: npx nx affected --target=test --parallel=3 --configuration=ci --base=origin/develop --codeCoverage

            - name: Upload coverage reports to Codecov
              uses: codecov/codecov-action@v3
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    build:
        runs-on: ubuntu-latest
        needs: install-deps
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - run: git fetch --no-tags --prune --depth=1 origin develop
            - name: Cache node modules
              uses: actions/cache@v3
              with:
                  path: node_modules
                  key: cache-node-modules-${{ hashFiles('package-lock.json') }}

            - run: npx nx affected:build --parallel=3 --base=origin/develop

            - name: Archive production artifacts
              uses: actions/upload-artifact@v3
              with:
                  name: dist
                  path: dist

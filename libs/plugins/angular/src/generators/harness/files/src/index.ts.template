import {
    BaseHarnessFilters,
    ComponentHarnessConstructor,
    if(isContainer) { %>ContentContainer<% }%>ComponentHarness,
    HarnessPredicate,
} from '@angular/cdk/testing';

/**
* A set of criteria that can be used to filter a list of {@link <%= name %>} instances.
**/
export interface I<%= name %>Filters extends BaseHarnessFilters {

}

export class <%= name %> extends <% if(isContainer) { %>ContentContainer<% }%>ComponentHarness {

    public static readonly hostSelector = '<%= selector %>';

    /**
     * Gets a `HarnessPredicate` that can be used to search for an {@link <%= name %>} instance with specific attributes.
     *
     * @param options Options for narrowing the search.
     * @return a `HarnessPredicate` configured with the given options.
     */
    public static with<T extends AsButtonHarness>(
        this: ComponentHarnessConstructor<T>,
        options: I<%= name %>Filters = {}
    ): HarnessPredicate<T> {
        return new HarnessPredicate(this, options);
    }
}
